<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goods.business.mapper.BizProductCategoryMapper">
  <resultMap id="BaseResultMap" type="com.goods.common.model.business.pojo.BizProductCategory">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <arg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="p_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="unit" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modified_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="one_category_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="two_category_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="three_category_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.goods.common.model.product.pojo.BizProduct">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <arg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="p_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="unit" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modified_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="one_category_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="two_category_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="three_category_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="image_url" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, p_num, name, model, unit, remark, sort, create_time, modified_time, one_category_id, 
    two_category_id, three_category_id, status
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    image_url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.goods.common.model.product.pojo.BizProduct" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.goods.common.model.product.pojo.BizProduct" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.goods.common.model.product.pojo.BizProduct">
    <!--
      WARNING - @mbg.generated
    -->
    delete from biz_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.goods.common.model.product.pojo.BizProduct" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from biz_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update biz_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pNum != null">
        p_num = #{record.pNum,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oneCategoryId != null">
        one_category_id = #{record.oneCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.twoCategoryId != null">
        two_category_id = #{record.twoCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.threeCategoryId != null">
        three_category_id = #{record.threeCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update biz_product
    set id = #{record.id,jdbcType=BIGINT},
      p_num = #{record.pNum,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      one_category_id = #{record.oneCategoryId,jdbcType=BIGINT},
      two_category_id = #{record.twoCategoryId,jdbcType=BIGINT},
      three_category_id = #{record.threeCategoryId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      image_url = #{record.imageUrl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update biz_product
    set id = #{record.id,jdbcType=BIGINT},
      p_num = #{record.pNum,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      one_category_id = #{record.oneCategoryId,jdbcType=BIGINT},
      two_category_id = #{record.twoCategoryId,jdbcType=BIGINT},
      three_category_id = #{record.threeCategoryId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>